Issue {issueClosedAt = Nothing, issueUpdatedAt = GithubDate {fromGithubDate = 2012-08-12 07:14:46 UTC}, issueHtmlUrl = "https://github.com/copyninja/Silpa-Flask/issues/4", issueClosedBy = Nothing, issueLabels = [IssueLabel {labelColor = "84b6eb", labelUrl = "https://api.github.com/repos/copyninja/Silpa-Flask/labels/enhancement", labelName = "enhancement"}], issueNumber = 4, issueAssignee = Just (GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/282e296a4edd6be96aadd7b39a970d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "copyninja", githubOwnerUrl = "https://api.github.com/users/copyninja", githubOwnerId = 195456, githubOwnerGravatarId = "282e296a4edd6be96aadd7b39a970d71"}), issueUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/a419ea29d55449d3d848d616c5c70c5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "santhoshtr", githubOwnerUrl = "https://api.github.com/users/santhoshtr", githubOwnerId = 161672, githubOwnerGravatarId = "a419ea29d55449d3d848d616c5c70c5f"}, issueTitle = "More seperation for modules", issuePullRequest = PullRequestReference {pullRequestReferenceHtmlUrl = Nothing, pullRequestReferencePatchUrl = Nothing, pullRequestReferenceDiffUrl = Nothing}, issueUrl = "https://api.github.com/repos/copyninja/Silpa-Flask/issues/4", issueCreatedAt = GithubDate {fromGithubDate = 2012-08-10 13:09:00 UTC}, issueBody = "Even though python modules are separated well, still the silpa application knows about them because in templates folder we have templateXYZ.html. Even if a module does not exist, the template exists inside templates folder. I propose further decoupling like this:\n* core\n* static\n* templates \n\n    * core templates\n\n* modules\n    \n     * spellcheck\n       \n           * template.html\n           * `__init__.py`  - that has import statement for the module- it can be from python path or relative path\n\nThen all modules can be loaded with following (example) code:\n\n```python\ndef loadModules():\n    res = {}\n    import os\n    # check subfolders\n    lst = os.listdir(\"modules\")\n    dir = []\n    for d in lst:\n        s = os.path.abspath(\"modules\") + os.sep + d\n        if os.path.isdir(s) and os.path.exists(s + os.sep + \"__init__.py\"):\n            dir.append(d)\n    # load the modules\n    for d in dir:\n        res[d] = __import__(\"modules.\" + d, fromlist = [\"*\"])\n    return res\n```\n\nbut the silpa.conf configuration for turing off/on the modules can still exist.\n\nAlso think about an absolute structure for packaging all these.\nWe will have\n* python-silpa\n* python-spellchecker\n\nBoth of the above does not know each other, no dependencies with them. If we define a simple bridge package says python-silpa-spellchecker with dependency to both of them and having setup script to register the python application in silpa - by adding some configuration and template to a predefined system path... I think that makes things easier.\n\n\n\n", issueState = "open", issueId = 6150210, issueComments = 1, issueMilestone = Just (Milestone {milestoneCreator = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/282e296a4edd6be96aadd7b39a970d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "copyninja", githubOwnerUrl = "https://api.github.com/users/copyninja", githubOwnerId = 195456, githubOwnerGravatarId = "282e296a4edd6be96aadd7b39a970d71"}, milestoneDueOn = Nothing, milestoneOpenIssues = 1, milestoneNumber = 2, milestoneClosedIssues = 0, milestoneDescription = "Currently only Python modules are decoupled their templates still exist. This milestone deals with completely decoupling the module from SILPA even templates should be part of the module there by making SILPA entirely independent of any module logic.", milestoneTitle = "Decouple SILPA from module entirely", milestoneUrl = "https://api.github.com/repos/copyninja/Silpa-Flask/milestones/2", milestoneCreatedAt = GithubDate {fromGithubDate = 2012-08-10 14:27:49 UTC}, milestoneState = "open"})}